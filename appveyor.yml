version: 0.1.2.{build}

clone_depth: 50
install:
  # Download and build ecsc.
  - git clone --depth=1 https://github.com/jonathanvdc/ecsc
  - nuget restore ecsc\src\ecsc.sln
  - msbuild /p:Configuration=Release ecsc\src\ecsc.sln
  - SET PATH=%PATH%;%cd%\ecsc\src\ecsc\bin\Release
build_script:
  # Make the project.
  - C:\cygwin\bin\bash -e -l -c "cd /cygdrive/c/projects/gtest-report-tools/src; make nuget; make exe"

after_build:
  # Zip the compiled binaries.
  - mkdir tools_build
  - mkdir tools_build\resources
  - xcopy src\gtest-report-print\bin\clr\*.dll tools_build
  - xcopy src\gtest-report-print\bin\clr\*.exe tools_build
  - xcopy src\gtest-report-html\bin\clr\*.dll tools_build
  - xcopy src\gtest-report-html\bin\clr\*.exe tools_build
  - xcopy resources\* tools_build\resources
  - 7z a gtest-report-tools.zip %APPVEYOR_BUILD_FOLDER%\tools_build\*

test_script:
  # Pretty-print a couple of reports
  - src\gtest-report-print\bin\clr\gtest-report-print.exe input\example-report.xml
  - src\gtest-report-print\bin\clr\gtest-report-print.exe input\spec-report.xml
  # Compare the reports.
  - src\gtest-report-html\bin\clr\gtest-report-html.exe input\example-report.xml input\spec-report.xml --css=resources\simple-style.css

artifacts:
  - path: gtest-report-tools.zip
    name: gtest-report-tools

deploy:
  - provider: GitHub
    release: gtest report tools
    tag: $(APPVEYOR_REPO_TAG_NAME)
    description: 'Release description' # Fill this out later.
    auth_token:
      secure: 693ZX2DdyyjDOqpJaJlUMO1hcMtLbsqMnCLzQVUEq7JjGb+bfEbaB/oMO0b26KZo
    artifact: gtest-report-tools.zip # Release the zipped tools as an artifact.
    draft: true  # Make this a draft.
    prerelease: false
    on:
      branch: master # Release from master branch only.
      appveyor_repo_tag: true # Deploy on tag push only.